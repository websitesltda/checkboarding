{"version":3,"sources":["store/Card.js","store/SideMenu.js","store/UserManagement.js","store/SearchStore.js","components/extension/TextIcon.js","components/layout/SideMenu.js","components/layout/NotificationContent.js","components/layout/TopMenu.js","components/layout/Notification.js","components/layout/Layout.js","components/pages/Home.js","components/pages/Empresas.js","components/pages/Funcionarios.js","components/pages/Categorias.js","components/pages/Perguntas.js","components/layout/App.js","components/common/registerServiceWorker.js","index.js","store/configureStore.js"],"names":["initialState","count","reducer","state","action","type","Object","objectSpread","smallMenu","actionCreators","toggleSideMenu","users","name","email","role","caloryLimit","concat","toConsumableArray","user","text","search","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","wrap","_context","prev","next","stop","_x","_x2","apply","this","arguments","TextIcon","style","alignSelf","paddingLeft","react_default","createElement","whiteSpace","display","dist_es","size","color","props","hidden","hideText","children","Component","SideMenu","activeItem","handleItemClick","e","_this","setState","changeSize","smallSidebar","fixed","borderless","className","vertical","Item","as","Link","to","active","onClick","TextIcon_TextIcon","getMenu","connect","sideMenu","bindActionCreators","NotificationContent","Column","textAlign","bio","button","map","patient","TopMenu","event","actions","target","value","src","Menu","position","circular","assign","sideAction","searchAction","Layout","layout_TopMenu","layout_SideMenu","Home","_useState","useState","key","_useState2","slicedToArray","empresas","_useState3","_useState4","novo","setNovo","_useState5","_useState6","checklists","setChecklists","_useState7","_useState8","cod_checklist","setcod_checklist","_useState9","_useState10","num_contrato","setnum_contrato","_useState11","_useState12","empresa_origem","setempresa_origem","_useState13","_useState14","empresa_destino","setempresa_destino","_useState15","_useState16","numero_container","setnumero_container","_useState17","_useState18","numero_oic","setnumero_oic","_useState19","_useState20","quantidade","setquantidade","_useState21","_useState22","status","_useState23","_useState24","data","setdata","_useState25","_useState26","id","setId","_cadCheclist","options","method","headers","Content-Type","Access-Control-Allow-Origin","url","axios","sent","length","ListarChecklist","formatarData","params","d","Date","getDate","m","getMonth","getFullYear","_TrazerCheclist","_callee2","res","_context2","r","_UpdChecklist","_callee3","_context3","_ListarChecklist","_callee4","_context4","_ExcluirChecklist","_callee5","_context5","_updateStatus","_callee6","params2","_context6","useEffect","TrazerCheclist","Fragment","compact","celled","Header","fullWidth","Row","HeaderCell","width","Body","c","Cell","_x3","updateStatus","Group","Or","ExcluirChecklist","Footer","colSpan","unstackable","widths","Field","placeholder","fluid","selection","onSearchChange","searchQuery","toString","onChange","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","console","log","_ref10","UpdChecklist","cadCheclist","primary","Empresas","setEmpresas","cidades","estados","codigo_impresa","setCodigo_empresa","nome","setNome","cnpj","setcnpj","setEmail","telefone","setTelefone","celular","setCelular","estado","setEstado","cidade","setCidade","_cadEmpresa","ListarEmpresas","_TrazerEmpresa","_UpdEmpresa","_ListarEmpresas","_ExcluirEmpresa","TrazerEmpresa","parseInt","Math","random","ExcluirEmpresa","UpdEmpresa","cadEmpresa","funcionarios","setFuncionarios","codigo_funcionario","setCodigo_funcionario","usuario","setUsuario","senha","setSenha","Rsenha","setRSenha","_cadFuncionario","cd_impresa","ListarFuncionarios","alert","_TrazerFuncionarios","codigo","_UpdFuncionario","_ListarFuncionarios","_ExcluirFuncionario","TrazerFuncionarios","ExcluirFuncionario","icon","UpdFuncionario","cadFuncionario","Categoria","categorias","setcategorias","tituloPT","settituloPT","tituloEN","settituloEN","foto","setfoto","ordem","setordem","fot","_cadCategorias","ListarCategorias","_TrazerCategorias","_UpdCategoria","_ListarCategorias","_ExcluirCategoria","TrazerCategorias","ExcluirCategoria","backgroundColor","class","UpdCategoria","cadCategorias","perguntas","setPerguntas","setCategorias","categoriasAll","setCategoriasAll","codigo_categoria","setcodigo_categoria","setFoto","nomeCateg","setnomeCateg","perguntaPT","setperguntaPT","perguntaEN","setperguntaEN","escrever","setescrever","_useState27","_useState28","assinalar","setassinalar","_useState29","_useState30","assinatura","setassinatura","_useState31","_useState32","_useState33","_useState34","escolher","slecionarCategoria","filter","codigoID","es","ass","id_categoria","ListarPerguntas","_TrazerPerguntas","_ListarPerguntas","dat","_ExcluirPergunta","TrazerPerguntas","ExcluirPergunta","alignItems","justifyContent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","document","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","store","reducers","card","Card","userManagement","UserManagement","searchStore","SearchStore","middleware","thunk","routerMiddleware","enhancers","rootReducer","combineReducers","routing","routerReducer","createStore","compose","applyMiddleware","configureStore","initialReduxState","rootElement","getElementById","ReactDOM","render","react_redux_es","react_router_redux_es","Route","exact","path","component","Funcionarios","Perguntas","URL","process","origin","addEventListener","fetch","response","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWroker"],"mappings":"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","file":"static/js/main.0c68c89d.chunk.js","sourcesContent":["const incrementCountType = 'INCREMENT_COUNT';\nconst decrementCountType = 'DECREMENT_COUNT';\nconst initialState = { count: 0 };\n\nexport const actionCreators = {\n  increment: () => ({ type: incrementCountType }),\n  decrement: () => ({ type: decrementCountType })\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === incrementCountType) {\n    return { ...state, count: state.count + 1 };\n  }\n\n  if (action.type === decrementCountType) {\n    return { ...state, count: state.count - 1 };\n  }\n\n  return state;\n};\n","const toggleMenu = 'TOGGLE_MENU';\nconst initialState = { smallMenu: false };\n\nexport const actionCreators = {\n  toggleSideMenu: () => ({ type: toggleMenu }),\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === toggleMenu) {\n    return { ...state, smallMenu: !state.smallMenu};\n  }\n\n  return state;\n};\n","const GET_ALL_USERS_ACTION = \"GET_ALL_USERS\";\nconst DELETE_USER_ACTION = \"DELETE_USER\";\nconst UPDATE_USER_ACTION = \"UPDATE_USER\";\nconst ADD_USER_ACTION = \"ADD_USER\";\n\nconst initialState = {\n  users: [\n    {\n      name: \"Albiona\",\n      email: \"alb@gmail.com\",\n      role: \"Admin\",\n      caloryLimit: 123\n    },\n    {\n      name: \"Albiona\",\n      email: \"alb@gmail.com\",\n      role: \"Admin\",\n      caloryLimit: 123\n    },\n    {\n      name: \"Albiona\",\n      email: \"alb@gmail.com\",\n      role: \"Admin\",\n      caloryLimit: 123\n    }\n  ]\n};\n\nexport const actionCreators = {\n  getUsers: () => async (dispatch, getState) => {\n    // dispatch({ type: GET_ALL_USERS_ACTION, users: json });\n  },\n  removeUser: id => async (dispatch, getState) => {\n    dispatch({\n      type: DELETE_USER_ACTION,\n      users: getState().userManagement.users.filter(m => m.id !== id)\n    });\n  },\n  editUser: user => async (dispatch, getState) => {\n    dispatch({\n      type: UPDATE_USER_ACTION,\n      users: getState().userManagement.users.map(\n        m => (m.id === user.id ? user : m)\n      )\n    });\n  },\n  addUser: user => async (dispatch, getState) => {\n    dispatch({\n      type: ADD_USER_ACTION,\n      user: Object.assign({}, user, { id: Math.random() })\n    });\n  }\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === GET_ALL_USERS_ACTION) {\n    return { ...state, users: action.users };\n  }\n  if (action.type === DELETE_USER_ACTION) {\n    return { ...state, users: action.users };\n  }\n  if (action.type === UPDATE_USER_ACTION) {\n    return { ...state, users: action.users };\n  }\n  if (action.type === ADD_USER_ACTION) {\n    return { ...state, users: [...state.users, action.user] };\n  }\n\n  return state;\n};\n","const SEARCH_BY_TEXT = 'SEARCH_BY_TEXT';\nconst initialState = { text: '' };\n\nexport const actionCreators = {\n    search: (text) => async (dispatch, getState) => {\n      dispatch({ type: SEARCH_BY_TEXT, text: text });\n  },\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === SEARCH_BY_TEXT) {\n    return { ...state, text: action.text };\n  }\n\n  return state;\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Icon} from \"semantic-ui-react\";\n\nexport default class TextIcon extends Component {\n\n    style = {\n        alignSelf: 'center',\n        paddingLeft: '4px'\n    };\n\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n        hideText: PropTypes.bool.isRequired,\n        color: PropTypes.string\n    };\n\n    render() {\n        return (\n            <div style={{whiteSpace: 'nowrap', display: 'inline-flex'}}>\n                <Icon size='large'\n                      color={this.props.color}\n                      name={this.props.name}/>\n                <div style={this.style} hidden={this.props.hideText}>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\";\nimport TextIcon from \"../extension/TextIcon\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../../store/SideMenu\";\n\nclass SideMenu extends Component {\n    state = {\n        activeItem: 'dashboard',\n    };\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n    changeSize = () => this.setState({ smallSidebar: !this.props.smallMenu });\n\n    getMenu() {\n        const { activeItem } = this.state;\n        return (\n            <Menu fixed='left' borderless className={(this.props.smallMenu ? 'small-side' : '') + ' side'} vertical>\n                <Menu.Item as={Link} to={'/'} name='dashboard' active={activeItem === 'dashboard'}\n                    onClick={this.handleItemClick}>\n                    <TextIcon hideText={this.props.smallMenu} color='teal' name='home'>\n                        Checklists\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/empresas'}\n                    name='empresas'\n                    active={activeItem === 'empresas'}\n                    onClick={this.handleItemClick}>\n                    <TextIcon hideText={this.props.smallMenu} name='calendar'>\n                        Empresas\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item\n                    as={Link} to={'/funcionarios'}\n                    name='funcionarios'\n                    active={activeItem === 'funcionarios'}\n                    onClick={this.handleItemClick}\n                >\n                    <TextIcon hideText={this.props.smallMenu} name='users'>\n                        Funcionarios\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/card'} name='card' active={activeItem === 'card'}\n                    onClick={this.handleItemClick}>\n\n                    <TextIcon hideText={this.props.smallMenu} name='time'>\n                        Relatorio\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/categoria'} name='categoria' active={activeItem === 'categoria'}\n                    onClick={this.handleItemClick}>\n\n                    <TextIcon hideText={this.props.smallMenu} name='time'>\n                        Categorias\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/perguntas'} name='perguntas' active={activeItem === 'perguntas'}\n                    onClick={this.handleItemClick}>\n\n                    <TextIcon hideText={this.props.smallMenu} name='time'>\n                        Perguntas\n                    </TextIcon>\n                </Menu.Item>\n\n                <Menu.Item as={Link} to={'/card'} name='card' active={activeItem === 'card'}\n                    onClick={this.handleItemClick}>\n\n                    <TextIcon hideText={this.props.smallMenu} name='time'>\n                        Perfil\n                    </TextIcon>\n                </Menu.Item>\n\n            </Menu>\n        )\n    }\n\n    render() {\n        return (\n            <div className='parent'>\n                <div className={(this.props.smallMenu ? 'small-side ' : '') + 'side'}>\n                    {this.getMenu()}\n                </div>\n                <div className={(this.props.smallMenu ? 'small-content ' : '') + 'content'}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => state.sideMenu,\n    dispatch => bindActionCreators(actionCreators, dispatch)\n)(SideMenu);\n","import React, { Component } from \"react\";\n\nimport {\n  Button,\n  Grid,\n  Header,\n  Segment\n} from \"semantic-ui-react\";\n\nexport default class NotificationContent extends Component {\n  state = {};\n  render() {\n    const patients = [\n      {\n        name: \"Elliot Fu\",\n        bio: \"Elliot has been a member since July 2012\",\n        button: \"More Info\"\n      },\n      {\n        name: \"James Frank\",\n        bio: \"James has been a member since Sep 2011\",\n        button: \"More Info\"\n      },\n      {\n        name: \"Algo Hemil\",\n        bio: \"Algo has been a member since Nov 2015\",\n        button: \"More Info\"\n      }\n    ];\n\n    return (\n      <Grid.Column textAlign='center'>\n        {patients.map(patient => (\n\n          <Segment>\n            <Header as='h4'>Basic Plan</Header>\n            <p>\n              {patient.bio}\n            </p>\n            <Button>{patient.button}</Button>\n          </Segment>\n        ))}\n      </Grid.Column>\n    );\n  }\n}\n","import React, {Component} from 'react'\nimport {Icon,\n        Image,\n        Input, \n        Label, \n        Menu,  \n       } from 'semantic-ui-react'\nimport {actionCreators as sideAction} from \"../../store/SideMenu\";\nimport {actionCreators as searchAction} from \"../../store/SearchStore\";\nimport {bindActionCreators} from \"redux\";\nimport { connect } from 'react-redux';\nimport Notification from './Notification';\n\nclass TopMenu extends Component {\n  state = {};\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  doSearch(event) {\n      this.props.actions.search(event.target.value);  \n  }\n\n  render() {\n    return (\n      <Menu fixed=\"top\" className=\"top-menu\">\n        <Menu.Item className=\"logo-space-menu-item\">\n          <div className=\"display-inline logo-space\">\n            <Image src=\"./logo.png\" />\n          </div>\n        </Menu.Item>\n\n        <Menu.Item\n          className=\"no-border\"\n          onClick={this.props.actions.toggleSideMenu}\n        >\n          <Icon name=\"bars\" />\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">\n    \n          <Menu.Item className=\"no-border\" position=\"right\">\n            <div className=\"display-inline\">\n              <Image\n                circular\n                size={\"mini\"}\n                src=\"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\"\n              />\n              Sair\n            </div>\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nexport default connect(\n    state => state.sideMenu,\n     dispatch => {\n        return {\n            actions: bindActionCreators(Object.assign({}, sideAction, searchAction), dispatch)\n        }}\n)(TopMenu);\n","import React, { Component } from \"react\";\nimport { Popup, Icon } from \"semantic-ui-react\";\nimport NotificationContent from \"./NotificationContent\";\n\nexport default class Notification extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Popup\n        hoverable\n        trigger={<Icon size=\"large\" name=\"mail outline\" color=\"grey\" />}\n        position='bottom right'\n        verticalOffset={18}\n        size=\"small\"\n        \n      >\n        <NotificationContent />\n        \n      </Popup>\n    );\n  }\n}\n","import React from 'react';\nimport SideMenu from \"../layout/SideMenu\";\nimport TopMenu from \"../layout/TopMenu\";\n\nexport default props => (\n    <div className=\"grid\">\n        <div className=\"menu\">\n            <TopMenu/>\n        </div>\n        <div className=\"main-content\">\n            <SideMenu>\n                {props.children}\n            </SideMenu>\n        </div>\n    </div>\n);\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport {\n  Button,\n  Form,\n  Header,\n  Icon,\n  Input,\n  Dropdown,\n  Segment,\n  Table\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport 'semantic-ui-css/semantic.min.css'\n\n\nexport default function Home() {\n\n  const [empresas, setEmpresas] = useState([{ key: 'Coopercitrus', value: 'Coopercitrus', text: 'Coopercitrus' }, { key: 'Olam', value: 'Olam', text: 'Olam' }]);\n  const [novo, setNovo] = useState(false);\n  const [checklists, setChecklists] = useState([]);\n\n  const [cod_checklist, setcod_checklist] = useState('');\n  const [num_contrato, setnum_contrato] = useState('');\n  const [empresa_origem, setempresa_origem] = useState('');\n  const [empresa_destino, setempresa_destino] = useState('');\n  const [numero_container, setnumero_container] = useState('');\n  const [numero_oic, setnumero_oic] = useState('');\n  const [quantidade, setquantidade] = useState('');\n  const [status, setstatus] = useState('Aguardando');\n  const [data, setdata] = useState('');\n  const [id, setId] = useState('');\n\n  async function cadCheclist() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        cod_checklist, num_contrato, empresa_origem, empresa_destino, numero_container,\n        numero_oic, quantidade, status, data\n      },\n\n      url: 'https://apicheckbording.herokuapp.com/CriarChecklist',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      ListarChecklist();\n      setNovo(false);\n    }\n  };\n\n  function formatarData(params) {\n    let d = new Date(params).getDate();\n    let m = new Date(params).getMonth() + 1;\n    let a = new Date(params).getFullYear();\n\n    return a + '-' + (m < 10 ? '0' + m : m) + '-' + (d < 10 ? '0' + d : d)\n\n  }\n\n  async function TrazerCheclist() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        id\n      },\n      url: 'https://apicheckbording.herokuapp.com/GetOneChecklist',\n    };\n\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      [res.data].map(r => (\n        setcod_checklist(r.cod_checklist),\n        setnum_contrato(r.num_contrato),\n        setempresa_origem(r.empresa_origem),\n        setempresa_destino(r.empresa_destino),\n        setnumero_container(r.numero_container),\n        setnumero_oic(r.numero_oic),\n        setquantidade(r.quantidade),\n        setdata(formatarData(r.data)),\n        setNovo(true)\n\n      ));\n\n    }\n\n  };\n\n  useEffect(() => {\n    if (id !== '') {\n      TrazerCheclist();\n    };\n  }, [id]);\n\n  useEffect(() => {\n    if (novo === false) {\n      setcod_checklist('');\n      setnum_contrato('');\n      setempresa_origem('');\n      setempresa_destino('');\n      setnumero_container('');\n      setnumero_oic('');\n      setquantidade('');\n      setId('');\n      setdata(formatarData(new Date()));\n    };\n  }, [novo]);\n\n  async function UpdChecklist() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        cod_checklist, num_contrato, empresa_origem, empresa_destino, numero_container,\n        numero_oic, quantidade, data, id\n      },\n\n      url: 'https://apicheckbording.herokuapp.com/UpdateChecklist',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      ListarChecklist();\n      setNovo(false);\n    }\n  };\n\n  async function ListarChecklist() {\n    const options = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {},\n      url: 'https://apicheckbording.herokuapp.com/ListarChecklist',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      setChecklists([]);\n    } else {\n      setChecklists(res.data);\n    }\n  };\n  useEffect(() => {\n    ListarChecklist();\n  }, []);\n\n  async function ExcluirChecklist(params) {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: { id: params },\n      url: 'https://apicheckbording.herokuapp.com/DeletarChecklist',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      ListarChecklist();\n    } else {\n      ListarChecklist();\n    }\n  };\n\n  async function updateStatus(params, params2) {\n\n    const stat = params2 === 'Aguardando' ? 'Concluido' : params2 === 'Concluido' ? 'Cancelado' : params2 === 'Cancelado' ? 'Aguardando' : null\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: { id: params, status: stat },\n      url: 'https://apicheckbording.herokuapp.com/UpdateStatus',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      ListarChecklist();\n    } else {\n      ListarChecklist();\n    }\n  };\n\n  function Lista() {\n    return (\n      <>\n        {checklists.map(c => (\n          <Table.Row>\n            <Table.Cell> {c.num_contrato} </Table.Cell>\n            <Table.Cell> {c.cod_checklist}  </Table.Cell>\n            <Table.Cell> {c.empresa_origem}  </Table.Cell>\n            <Table.Cell> {c.empresa_destino}  </Table.Cell>\n            <Table.Cell> {c.quantidade}  </Table.Cell>\n            <Table.Cell> <Button onClick={() => updateStatus(c.id, c.status)} color={c.status === 'Aguardando' ? 'orange' : c.status === 'Concluido' ? 'green' : c.status === 'Cancelado' ? 'red' : null}> {c.status} </Button> </Table.Cell>\n            <Table.Cell>\n              <Button.Group>\n                <Button onClick={() => setId(c.id)}>\n                  <Icon name=\"pencil\" />\n                </Button>\n                <Button.Or text='ou' />\n                <Button onClick={() => ExcluirChecklist(c.id)} color='red'>\n                  <Icon name=\"delete\" />\n                </Button>\n              </Button.Group>\n\n            </Table.Cell>\n          </Table.Row>\n        ))}\n      </>\n    )\n  };\n\n  return (\n\n    <>\n\n      {novo === false ?\n        <Segment>\n          <Header>Lista de Checklists   <Button onClick={() => setNovo(!novo)} color='green'>Novo Checklist</Button></Header>\n          <Table compact celled>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell>Nº Contrato</Table.HeaderCell>\n                <Table.HeaderCell>Nº do Checklist</Table.HeaderCell>\n                <Table.HeaderCell>Empresa de Origem</Table.HeaderCell>\n                <Table.HeaderCell>Empresa de Destino</Table.HeaderCell>\n                <Table.HeaderCell>Quantidade de Sacas</Table.HeaderCell>\n                <Table.HeaderCell>Status</Table.HeaderCell>\n                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>{Lista()}</Table.Body>\n\n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan={6} />\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </Segment>\n\n        : null}\n\n\n      {novo === true ?\n        <Segment>\n          <Form>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Empresa de Origem</label>\n                <Dropdown\n                  placeholder='Nome da empresa de origem.'\n                  fluid\n                  search\n                  selection\n                  value={empresa_origem}\n                  onSearchChange={(e, { searchQuery }) => setempresa_origem([searchQuery].toString())}\n                  onChange={(e, { value }) => setempresa_origem([value].toString())}\n                  options={empresas}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <label>Empresa de Destino</label>\n                <Dropdown\n                  placeholder='Nome da empresa de Destino.'\n                  fluid\n                  search\n                  selection\n                  value={empresa_destino}\n                  onSearchChange={(e, { searchQuery }) => setempresa_destino([searchQuery].toString())}\n                  onChange={(e, { value }) => setempresa_destino([value].toString())}\n                  options={empresas}\n                />\n              </Form.Field>\n            </Form.Group>\n\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Número do contrato</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setnum_contrato([value].toString())}\n                  value={num_contrato}\n                  placeholder=\"Número do contrato.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Número do container</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setnumero_container([value].toString())}\n                  value={numero_container}\n                  placeholder=\"Número do container.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Número do checklist</label>\n                <Input\n                  type=\"text\"\n                  onChange={(e, { value }) => setcod_checklist([value].toString())}\n                  value={cod_checklist}\n                  placeholder=\"Número do checklist.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Código do OIC</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setnumero_oic([value].toString())}\n                  value={numero_oic}\n                  placeholder=\"Código do OIC.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Data do Checklist</label>\n                <Input\n                  type=\"date\"\n                  onChange={(e, { value }) => console.log([value].toString())}\n                  value={data}\n                  placeholder=\"Data do Checklist.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Quantidade de Sacas</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setquantidade([value].toString())}\n                  value={quantidade}\n                  placeholder=\"Quantidade de Sacas.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Button onClick={() => id !== '' ? UpdChecklist() : cadCheclist()} primary type=\"submit\" >\n              {id !== '' ? 'Editar' : 'Salvar'}\n            </Button>\n            <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n          </Form>\n        </Segment>\n        : null}\n    </>\n\n  );\n\n};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport {\n  Button,\n  Form,\n  Header,\n  Icon,\n  Input,\n  Dropdown,\n  Segment,\n  Table\n} from \"semantic-ui-react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport axios from \"axios\";\n\nexport default function Empresas() {\n\n  const [novo, setNovo] = useState(false);\n  const [empresas, setEmpresas] = useState([]);\n  const [cidades, setCidades] = useState([{ key: 'São Sebastião do Paraiso', value: 'São Sebastião do Paraiso', text: 'São Sebastião do Paraiso' }, { key: 'São Tomais de Aquino', value: 'São Tomais de Aquino', text: 'São Tomais de Aquino' }]);\n  const [estados, setEstados] = useState([{ key: 'São Paulo', value: 'São Paulo', text: 'São Paulo' }, { key: 'Minas Gerais', value: 'Minas Gerais', text: 'Minas Gerais' }]);\n\n  const [codigo_impresa, setCodigo_empresa] = useState('');\n  const [nome, setNome] = useState('');\n  const [cnpj, setcnpj] = useState('');\n  const [email, setEmail] = useState('');\n  const [telefone, setTelefone] = useState('');\n  const [celular, setCelular] = useState('');\n  const [estado, setEstado] = useState('');\n  const [cidade, setCidade] = useState('');\n  const [id, setId] = useState('');\n\n  async function cadEmpresa() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n      codigo_impresa, nome, cnpj, email, telefone, celular, estado, cidade\n      },\n\n      url: 'CriarEmpresas',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      ListarEmpresas();\n      setNovo(false);\n    }\n  };\n\n  async function TrazerEmpresa() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        id\n      },\n      url: 'GetOneEmpresas',\n    };\n\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      [res.data].map(r => (\n       setNome(r.nome),\n       setCodigo_empresa(r.codigo_impresa),\n       setcnpj(r.cnpj),\n       setCelular(r.celular),\n       setTelefone(r.telefone),\n       setEmail(r.email),\n       setEstado(r.estado),\n       setCidade(r.cidade),\n        setNovo(true)\n\n      ));\n\n    }\n\n  };\n\n  useEffect(() => {\n    if (id !== '') {\n      TrazerEmpresa();\n    };\n  }, [id]);\n\n  useEffect(() => {\n    if (novo === false) {\n      setNome('');\n      setcnpj('');\n      setCelular('');\n      setTelefone('');\n      setEmail('');\n      setEstado('');\n      setCidade('');\n      setId('');\n      setCodigo_empresa( parseInt(Math.random() * (999999 - 100000) + 100000))\n    };\n  }, [novo]);\n\n  async function UpdEmpresa() {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {\n        nome, cnpj, email, telefone, celular, estado, cidade, id\n      },\n\n      url: 'UpdateEmpresas',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n\n    } else {\n      ListarEmpresas();\n      setNovo(false);\n    }\n  };\n\n  async function ListarEmpresas() {\n    const options = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: {},\n      url: 'ListarEmpresas',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      setEmpresas([]);\n    } else {\n      setEmpresas(res.data);\n    }\n  };\n  useEffect(() => {\n    ListarEmpresas();\n  }, []);\n\n  async function ExcluirEmpresa(params) {\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      },\n      data: { id: params },\n      url: 'DeletarEmpresas',\n    };\n    const res = await axios(options);\n    if (res.data.length === 0) {\n      ListarEmpresas();\n    } else {\n      ListarEmpresas();\n    }\n  };\n\n  function Lista() {\n    return (\n      <>\n        {empresas.map(c => (\n          <Table.Row>\n            <Table.Cell> {c.codigo_impresa} </Table.Cell>\n            <Table.Cell> {c.nome} </Table.Cell>\n            <Table.Cell> {c.cnpj}  </Table.Cell>\n            <Table.Cell> {c.email}  </Table.Cell>\n            <Table.Cell> {c.telefone}  </Table.Cell>\n            <Table.Cell> {c.celular}  </Table.Cell>\n            <Table.Cell> {c.estado}  </Table.Cell>\n            <Table.Cell> {c.cidade}  </Table.Cell>\n            <Table.Cell>\n              <Button.Group>\n                <Button onClick={() => setId(c.id)}>\n                  <Icon name=\"pencil\" />\n                </Button>\n                <Button.Or text='ou' />\n                <Button onClick={() => ExcluirEmpresa(c.id)} color='red'>\n                  <Icon name=\"delete\" />\n                </Button>\n              </Button.Group>\n\n            </Table.Cell>\n          </Table.Row>\n        ))}\n      </>\n    )\n  };\n\n  return (\n\n    <>\n\n      {novo === false ?\n        <Segment>\n          <Header>Lista das Empresas   <Button onClick={() => setNovo(!novo)} color='green'>Nova Empresa</Button></Header>\n          <Table compact celled>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell>Código</Table.HeaderCell>\n                <Table.HeaderCell>Nome</Table.HeaderCell>\n                <Table.HeaderCell>CNPJ</Table.HeaderCell>\n                <Table.HeaderCell>Email</Table.HeaderCell>\n                <Table.HeaderCell>Telefone</Table.HeaderCell>\n                <Table.HeaderCell>Celular</Table.HeaderCell>\n                <Table.HeaderCell>Estado</Table.HeaderCell>\n                <Table.HeaderCell>Cidade</Table.HeaderCell>\n                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>{Lista()}</Table.Body>\n\n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan={6} />\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </Segment>\n\n        : null}\n\n\n      {novo === true ?\n        <Segment>\n          <Form>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Código da Empresa</label>\n                <Input\n                  type=\"number\"\n                  value={codigo_impresa}\n                  placeholder=\"Código da Empresa.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n\n              <Form.Field>\n                <label>Nome da empresa</label>\n                <Input\n                  type=\"text\"\n                  onChange={(e, { value }) => setNome([value].toString())}\n                  value={nome}\n                  placeholder=\"Nome da Empresa\"\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <label>CNPJ</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setcnpj([value].toString())}\n                  value={cnpj}\n                  placeholder=\"CNPJ\"\n                />\n              </Form.Field>\n            </Form.Group>\n\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Email</label>\n                <Input\n                  type=\"email\"\n                  onChange={(e, { value }) => setEmail([value].toString())}\n                  value={email}\n                  placeholder=\"Email.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Telefone</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setTelefone([value].toString())}\n                  value={telefone}\n                  placeholder=\"Telefone.\"\n                  fluid\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Celular</label>\n                <Input\n                  type=\"number\"\n                  onChange={(e, { value }) => setCelular([value].toString())}\n                  value={celular}\n                  placeholder=\"Celular.\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Estado</label>\n                <Dropdown\n                  placeholder='Estado.'\n                  fluid\n                  search\n                  selection\n                  value={estado}\n                  onSearchChange={(e, { searchQuery }) => setEstado([searchQuery].toString())}\n                  onChange={(e, { value }) => setEstado([value].toString())}\n                  options={estados}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group unstackable widths={2}>\n              <Form.Field>\n                <label>Cidade</label>\n                <Dropdown\n                  placeholder='Cidade.'\n                  fluid\n                  search\n                  selection\n                  value={cidade}\n                  onSearchChange={(e, { searchQuery }) => setCidade([searchQuery].toString())}\n                  onChange={(e, { value }) => setCidade([value].toString())}\n                  options={cidades}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Button onClick={() => id !== '' ? UpdEmpresa() : cadEmpresa()} primary type=\"submit\" >\n              {id !== '' ? 'Editar' : 'Salvar'}\n            </Button>\n            <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n          </Form>\n        </Segment>\n        : null}\n    </>\n\n  );\n\n};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {\n    Button,\n    Form,\n    Header,\n    Icon,\n    Input,\n    Dropdown,\n    Segment,\n    Table\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nexport default function Empresas() {\n\n    const [novo, setNovo] = useState(false);\n    const [funcionarios, setFuncionarios] = useState([]);\n\n    const [codigo_impresa, setCodigo_empresa] = useState('');\n    const [codigo_funcionario, setCodigo_funcionario] = useState('');\n    const [nome, setNome] = useState('');\n    const [email, setEmail] = useState('');\n    const [telefone, setTelefone] = useState('');\n    const [usuario, setUsuario] = useState('');\n    const [senha, setSenha] = useState('');\n    const [Rsenha, setRSenha] = useState('');\n    const [id, setId] = useState('');\n\n    async function cadFuncionario() {\n        if (senha === Rsenha) {\n            const options = {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    'Access-Control-Allow-Origin': '*',\n                },\n                data: {\n                    codigo_funcionario, cd_impresa: codigo_impresa, nome, email, telefone, usuario, senha\n                },\n\n                url: 'CriarFuncionarios',\n            };\n            const res = await axios(options);\n            if (res.data.length === 0) {\n\n            } else {\n                ListarFuncionarios();\n                setNovo(false);\n            }\n        } else {\n            alert('Corrija sua senha.');\n        }\n    };\n\n    async function TrazerFuncionarios() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id\n            },\n            url: 'GetOneFuncionarios',\n        };\n\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            [res.data].map(r => (\n                setCodigo_empresa(r.codigo),\n                setNome(r.nome),\n                setTelefone(r.telefone),\n                setEmail(r.email),\n                setUsuario(r.usuario),\n                setSenha(r.senha),\n                setNovo(true)\n\n            ));\n\n        }\n\n    };\n\n    useEffect(() => {\n        if (id !== '') {\n            TrazerFuncionarios();\n        };\n    }, [id]);\n\n    useEffect(() => {\n        if (novo === false) {\n            setNome('');\n            setTelefone('');\n            setEmail('');\n            setUsuario('');\n            setSenha('');\n            setRSenha('');\n            setId('');\n            setCodigo_empresa(parseInt(Math.random() * (999999 - 100000) + 100000))\n            setCodigo_funcionario(parseInt(Math.random() * (999999 - 100000) + 100000))\n        };\n    }, [novo]);\n\n    async function UpdFuncionario() {\n        if (senha === Rsenha) {\n            const options = {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    'Access-Control-Allow-Origin': '*',\n                },\n                data: {\n                    nome, email, telefone, usuario, senha, id\n\n                },\n\n                url: 'UpdateFuncionarios',\n            };\n            const res = await axios(options);\n            if (res.data.length === 0) {\n\n            } else {\n                ListarFuncionarios();\n                setNovo(false);\n            }\n        } else {\n            alert('Digite sua senha corretamente no campo \"Repita a Senha\"')\n        }\n    };\n\n    async function ListarFuncionarios() {\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {},\n            url: 'ListarFuncionarios',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            setFuncionarios([]);\n        } else {\n            setFuncionarios(res.data);\n        }\n    };\n    useEffect(() => {\n        ListarFuncionarios();\n    }, []);\n\n    async function ExcluirFuncionario(params) {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: { id: params },\n            url: 'DeletarFuncionarios',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            ListarFuncionarios();\n        } else {\n            ListarFuncionarios();\n        }\n    };\n\n    function Lista() {\n        return (\n            <>\n                {funcionarios.map(c => (\n                    <Table.Row>\n                        <Table.Cell> {c.codigo} </Table.Cell>\n                        <Table.Cell> {c.nome} </Table.Cell>\n                        <Table.Cell> {c.email}  </Table.Cell>\n                        <Table.Cell> {c.telefone}  </Table.Cell>\n                        <Table.Cell> {c.usuario}  </Table.Cell>\n                        <Table.Cell> {c.senha}  </Table.Cell>\n                        <Table.Cell>\n                            <Button.Group>\n                                <Button onClick={() => setId(c.id)}>\n                                    <Icon name=\"pencil\" />\n                                </Button>\n                                <Button.Or text='ou' />\n                                <Button onClick={() => ExcluirFuncionario(c.id)} color='red'>\n                                    <Icon name=\"delete\" />\n                                </Button>\n                            </Button.Group>\n\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </>\n        )\n    };\n\n    return (\n\n        <>\n\n            {novo === false ?\n                <Segment>\n                    <Header>Lista de Funcionarios   <Button onClick={() => setNovo(!novo)} color='green'>Novo Funcionario</Button></Header>\n                    <Table compact celled>\n                        <Table.Header fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell>Código do Funcionario</Table.HeaderCell>\n                                <Table.HeaderCell>Nome</Table.HeaderCell>\n                                <Table.HeaderCell>Email</Table.HeaderCell>\n                                <Table.HeaderCell>Telefone</Table.HeaderCell>\n                                <Table.HeaderCell>Usuario</Table.HeaderCell>\n                                <Table.HeaderCell>Senha</Table.HeaderCell>\n                                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>{Lista()}</Table.Body>\n\n                        <Table.Footer fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={6} />\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Segment>\n\n                : null}\n\n\n            {novo === true ?\n                <Segment>\n                    <Form>\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Código do Funcionario</label>\n                                <Input\n                                    type=\"number\"\n                                    value={codigo_funcionario}\n                                    placeholder=\"Código da Empresa.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Nome do Funcionario</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setNome([value].toString())}\n                                    value={nome}\n                                    placeholder=\"Nome da Empresa\"\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>Email</label>\n                                <Input\n                                    type=\"email\"\n                                    onChange={(e, { value }) => setEmail([value].toString())}\n                                    value={email}\n                                    placeholder=\"Email.\"\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n                        <Form.Group unstackable widths={2}>\n                            <Form.Field>\n                                <label>Telefone</label>\n                                <Input\n                                    type=\"number\"\n                                    onChange={(e, { value }) => setTelefone([value].toString())}\n                                    value={telefone}\n                                    placeholder=\"Telefone.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Usuário</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setUsuario([value].toString())}\n                                    value={usuario}\n                                    placeholder=\"Usuário.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n                        <Form.Group unstackable widths={2}>\n                            <Form.Field>\n                                <label>Senha</label>\n                                <Input\n                                    type=\"password\"\n                                    onChange={(e, { value }) => setSenha([value].toString())}\n                                    value={senha}\n                                    placeholder=\"Senha.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Repita a Senha</label>\n                                <Input\n                                    icon={senha === Rsenha ? 'check' : 'close'}\n                                    type=\"password\"\n                                    onChange={(e, { value }) => setRSenha([value].toString())}\n                                    value={Rsenha}\n                                    placeholder=\"Repita a Senha.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n\n                        <Button onClick={() => id !== '' ? UpdFuncionario() : cadFuncionario()} primary type=\"submit\" >\n                            {id !== '' ? 'Editar' : 'Salvar'}\n                        </Button>\n                        <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n                    </Form>\n                </Segment>\n                : null}\n        </>\n\n    );\n\n};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {\n    Button,\n    Form,\n    Header,\n    Icon,\n    Input,\n    Dropdown,\n    Segment,\n    Table\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nexport default function Categoria() {\n\n    const [novo, setNovo] = useState(false);\n    const [categorias, setcategorias] = useState([]);\n\n    const [codigo_impresa, setCodigo_empresa] = useState('');\n    const [tituloPT, settituloPT] = useState('');\n    const [tituloEN, settituloEN] = useState('');\n    const [foto, setfoto] = useState(false);\n    const [ordem, setordem] = useState('');\n    const [id, setId] = useState('');\n    const fot = foto.toString()\n\n    async function cadCategorias() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                cd_impresa: codigo_impresa, tituloPT, tituloEN, foto: fot, ordem\n            },\n\n            url: 'CriarCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            ListarCategorias();\n            setNovo(false);\n        }\n    };\n\n    async function TrazerCategorias() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id\n            },\n            url: 'GetOneCategorias',\n        };\n\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            [res.data].map(r => (\n                settituloEN(r.tituloEN),\n                settituloPT(r.tituloPT),\n                setfoto(r.foto === 'false' ? false : true),\n                setordem(r.ordem),\n                setNovo(true)\n            ));\n\n        }\n\n    };\n\n    useEffect(() => {\n        if (id !== '') {\n            TrazerCategorias();\n        };\n    }, [id]);\n\n    useEffect(() => {\n        if (novo === false) {\n            settituloEN('');\n            settituloPT('');\n            setfoto(false);\n            setId('');\n            setordem('')\n\n            setCodigo_empresa(parseInt(Math.random() * (999999 - 100000) + 100000))\n\n        };\n    }, [novo]);\n\n    async function UpdCategoria() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id, tituloPT, tituloEN, foto: fot, ordem\n\n            },\n\n            url: 'UpdateCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            ListarCategorias();\n            setNovo(false);\n        }\n    };\n\n    async function ListarCategorias() {\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {},\n            url: 'ListarCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            setcategorias([]);\n        } else {\n            setcategorias(res.data);\n        }\n    };\n    useEffect(() => {\n        ListarCategorias();\n    }, []);\n\n    async function ExcluirCategoria(params) {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: { id: params },\n            url: 'DeletarCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            ListarCategorias();\n        } else {\n            ListarCategorias();\n        }\n    };\n\n    function Lista() {\n        return (\n            <>\n                {categorias.map(c => (\n                    <Table.Row>\n                        <Table.Cell> {c.id} </Table.Cell>\n                        <Table.Cell> {c.tituloPT} </Table.Cell>\n                        <Table.Cell> {c.tituloEN}  </Table.Cell>\n                        <Table.Cell> {c.foto === 'false' ? 'Não' : 'Sim'}  </Table.Cell>\n                        <Table.Cell> {c.ordem}  </Table.Cell>\n                        <Table.Cell>\n                            <Button.Group>\n                                <Button onClick={() => setId(c.id)}>\n                                    <Icon name=\"pencil\" />\n                                </Button>\n                                <Button.Or text='ou' />\n                                <Button onClick={() => ExcluirCategoria(c.id)} color='red'>\n                                    <Icon name=\"delete\" />\n                                </Button>\n                            </Button.Group>\n\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </>\n        )\n    };\n\n    return (\n\n        <>\n\n            {novo === false ?\n                <Segment>\n                    <Header>Lista de Categorias   <Button onClick={() => setNovo(!novo)} color='green'>Nova Categoria</Button></Header>\n                    <Table compact celled>\n                        <Table.Header fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell>Código da Categoria</Table.HeaderCell>\n                                <Table.HeaderCell>Titulo em Portugues</Table.HeaderCell>\n                                <Table.HeaderCell>Titulo em Inglês</Table.HeaderCell>\n                                <Table.HeaderCell>É Foto ?</Table.HeaderCell>\n                                <Table.HeaderCell>Ordem </Table.HeaderCell>\n                                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>{Lista()}</Table.Body>\n\n                        <Table.Footer fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={6} />\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Segment>\n\n                : null}\n\n\n            {novo === true ?\n                <Segment>\n                    <Form>\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Categoria em Portugues</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => settituloPT([value].toString())}\n                                    value={tituloPT}\n                                    placeholder=\"Categoria em Portugues\"\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>Categoria em Inglês</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => settituloEN([value].toString())}\n                                    value={tituloEN}\n                                    placeholder=\"Categoria em Inglês\"\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n                        <Form.Group unstackable widths={2}>\n                            <Form.Field>\n                                <label>È Foto ?</label>\n                                <button onClick={() => setfoto(!foto)} style={{ width: 150, backgroundColor: foto === true ? 'green' : 'red', color: 'white' }} class=\"ui button\">{foto === true ? 'Sim' : 'Não'}</button>\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Ordem de Apresentação</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setordem([value].toString())}\n                                    value={ordem}\n                                    placeholder=\"Usuário.\"\n                                    fluid\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n\n                        <Button onClick={() => id !== '' ? UpdCategoria() : cadCategorias()} primary type=\"submit\" >\n                            {id !== '' ? 'Editar' : 'Salvar'}\n                        </Button>\n                        <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n                    </Form>\n                </Segment>\n                : null}\n        </>\n\n    );\n\n};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {\n    Button,\n    Form,\n    Header,\n    Icon,\n    Input,\n    Dropdown,\n    Segment,\n    Table\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nexport default function Categoria() {\n\n    const [novo, setNovo] = useState(false);\n    const [perguntas, setPerguntas] = useState([]);\n    const [categorias, setCategorias] = useState([]);\n    const [categoriasAll, setCategoriasAll] = useState([]);\n\n    const [codigo_impresa, setCodigo_empresa] = useState('');\n    const [codigo_categoria, setcodigo_categoria] = useState('');\n    const [foto, setFoto] = useState(false);\n    const [nomeCateg, setnomeCateg] = useState('');\n    const [perguntaPT, setperguntaPT] = useState('');\n    const [perguntaEN, setperguntaEN] = useState('');\n    const [tituloPT, settituloPT] = useState('');\n    const [tituloEN, settituloEN] = useState('');\n    const [escrever, setescrever] = useState(true);\n    const [assinalar, setassinalar] = useState(false);\n    const [assinatura, setassinatura] = useState(false);\n    const [ordem, setordem] = useState('');\n    const [id, setId] = useState('');\n\n    function escolher(params) {\n        if (params === 'escrever') {\n            setescrever(true)\n            setassinalar(false)\n            setassinatura(false)\n        }\n        else if (params === 'assinalar') {\n            setescrever(false)\n            setassinalar(true)\n            setassinatura(false)\n        }\n        else if (params === 'assinar') {\n            setescrever(false)\n            setassinalar(false)\n            setassinatura(true)\n        } else {\n            setescrever(false)\n            setassinalar(false)\n            setassinatura(false)\n        }\n    }\n\n\n    function slecionarCategoria(params) {\n        const codigo = categoriasAll.filter(c => (c.tituloPT === params));\n        const codigoID = codigo.map(c => (c.id));\n        const foto = codigo.map(c => (c.foto));\n        if (foto.toString() === 'true') {\n            setFoto(true)\n            setescrever(false)\n            setassinalar(false)\n            setassinatura(false)\n        } else {\n            setFoto(false)\n        }\n\n        setcodigo_categoria(codigoID.toString());\n        setnomeCateg(params);\n    }\n    const es = escrever.toString();\n    const as = assinalar.toString();\n    const ass = assinatura.toString();\n\n    async function cadCategorias() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id_categoria: codigo_categoria, cd_impresa: codigo_impresa, perguntaPT, perguntaEN, assinalar: as, assinatura: ass, escrever: es, tituloPT, tituloEN, ordem\n            },\n\n            url: 'CriarPerguntas',\n        };\n\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            ListarCategorias();\n            ListarPerguntas();\n            setNovo(false);\n        }\n    };\n    function namedacateg(params) {\n        const codigo = categoriasAll.filter(c => (c.id.toString() === params));\n        const codigoID = codigo.map(c => (c.tituloPT));\n        return codigoID;\n    }\n    async function TrazerPerguntas() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id\n            },\n            url: 'GetOnePerguntas',\n        };\n\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            [res.data].map(r => (\n                setnomeCateg(namedacateg(r.id_categoria).toString()),\n                setperguntaEN(r.perguntaEN),\n                setperguntaPT(r.perguntaPT),\n                setescrever(r.escrever === 'true'?true:false),\n                setassinalar(r.assinalar === 'true'?true:false),\n                setassinatura(r.assinatura === 'true'?true:false),\n                setFoto(r.escrever === 'false' && r.assinalar === 'false' && r.assinatura === 'false' ? true:false),\n                settituloEN(r.tituloEN),\n                settituloPT(r.tituloPT),\n                setordem(r.ordem),\n                setNovo(true)\n            ));\n\n        }\n\n    };\n\n    useEffect(() => {\n        if (id !== '') {\n            TrazerPerguntas();\n        };\n    }, [id]);\n\n    useEffect(() => {\n        if (novo === false) {\n\n            setnomeCateg('')\n            setperguntaEN('');\n            setperguntaPT('');\n            setescrever(true);\n            setassinalar(false);\n            setassinatura(false);\n            setFoto(false);\n            settituloEN('');\n            settituloPT('');\n            setordem('');\n\n            setCodigo_empresa(parseInt(Math.random() * (999999 - 100000) + 100000))\n\n        };\n    }, [novo]);\n\n    async function UpdCategoria() {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {\n                id, id_categoria: codigo_categoria, perguntaPT, perguntaEN, assinalar: as, assinatura: ass, escrever: es, tituloPT, tituloEN, ordem\n\n            },\n\n            url: 'UpdatePerguntas',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n\n        } else {\n            ListarCategorias();\n            ListarPerguntas()\n            setNovo(false);\n        }\n    };\n\n    async function ListarPerguntas() {\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {},\n            url: 'ListarPerguntas',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            setPerguntas([]);\n        } else {\n            setPerguntas(res.data);\n        }\n    };\n\n    async function ListarCategorias() {\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: {},\n            url: 'ListarCategorias',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            setCategorias([]);\n            setCategoriasAll([])\n\n        } else {\n            const dat = res.data;\n            setCategoriasAll(dat)\n            setCategorias(\n                dat.map(r => (\n                    { key: r.tituloPT, value: r.tituloPT, text: r.tituloPT }\n                )))\n        }\n    };\n    useEffect(() => {\n        ListarCategorias();\n        ListarPerguntas()\n    }, []);\n\n\n    async function ExcluirPergunta(params) {\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n            data: { id: params },\n            url: 'DeletarPerguntas',\n        };\n        const res = await axios(options);\n        if (res.data.length === 0) {\n            ListarCategorias();\n            ListarPerguntas()\n        } else {\n            ListarCategorias();\n            ListarPerguntas()\n        }\n    };\n\n    function nomedaCategoria(params) {\n        const nomes = categoriasAll.filter(c => (c.id.toString() === params));\n        const nome = nomes.map(c => (c.tituloPT));\n        return nome;\n    }\n\n    function Lista() {\n        return (\n            <>\n                {perguntas.map(c => (\n                    <Table.Row>\n                        <Table.Cell> {nomedaCategoria(c.id_categoria)} </Table.Cell>\n                        <Table.Cell> {c.perguntaPT} </Table.Cell>\n                        <Table.Cell> {c.perguntaEN}  </Table.Cell>\n                        <Table.Cell> {c.escrever === 'false' ? 'Não' : 'Sim'}  </Table.Cell>\n                        <Table.Cell> {c.assinalar === 'false' ? 'Não' : 'Sim'}  </Table.Cell>\n                        <Table.Cell> {c.assinatura === 'false' ? 'Não' : 'Sim'}  </Table.Cell>\n                        <Table.Cell> {c.tituloPT}  </Table.Cell>\n                        <Table.Cell> {c.tituloEN}  </Table.Cell>\n                        <Table.Cell> {c.ordem}  </Table.Cell>\n                        <Table.Cell>\n                            <Button.Group>\n                                <Button onClick={() => setId(c.id)}>\n                                    <Icon name=\"pencil\" />\n                                </Button>\n                                <Button.Or text='ou' />\n                                <Button onClick={() => ExcluirPergunta(c.id)} color='red'>\n                                    <Icon name=\"delete\" />\n                                </Button>\n                            </Button.Group>\n\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </>\n        )\n    };\n\n    return (\n\n        <>\n\n            {novo === false ?\n                <Segment>\n                    <Header>Lista de Perguntas   <Button onClick={() => setNovo(!novo)} color='green'>Nova Pergunta</Button></Header>\n                    <Table compact celled>\n                        <Table.Header fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell>Categoria</Table.HeaderCell>\n                                <Table.HeaderCell>Pergunta em Portugues</Table.HeaderCell>\n                                <Table.HeaderCell>Pergunta em Inglês</Table.HeaderCell>\n                                <Table.HeaderCell>È de Escrever ?</Table.HeaderCell>\n                                <Table.HeaderCell>È de Assinalar ? </Table.HeaderCell>\n                                <Table.HeaderCell>È uma Assinatura ? </Table.HeaderCell>\n                                <Table.HeaderCell>Subtitulo em Portugues/Opções em Portugues </Table.HeaderCell>\n                                <Table.HeaderCell>Subtitulo em Inglês/Opções em Inglês </Table.HeaderCell>\n                                <Table.HeaderCell>Ordem de Apresentação </Table.HeaderCell>\n                                <Table.HeaderCell width={2}>Ações</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>{Lista()}</Table.Body>\n\n                        <Table.Footer fullWidth>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={10} />\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Segment>\n\n                : null}\n\n\n            {novo === true ?\n                <Segment>\n                    <Form>\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Categoria da Pergunta</label>\n                                <Dropdown\n                                    placeholder='Categorias da Pergunta.'\n                                    fluid\n                                    search\n                                    selection\n                                    value={nomeCateg}\n                                    onSearchChange={(e, { searchQuery }) => slecionarCategoria([searchQuery].toString())}\n                                    onChange={(e, { value }) => slecionarCategoria([value].toString())}\n                                    options={categorias}\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>Ordem de Apresentação</label>\n                                <Input\n                                    type=\"number\"\n                                    onChange={(e, { value }) => setordem([value].toString())}\n                                    value={ordem}\n                                    placeholder=\"Ordem de apresentação.\"\n                                    fluid\n                                />\n                            </Form.Field>\n\n                        </Form.Group>\n\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>Pergunta em Portugues</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setperguntaPT([value].toString())}\n                                    value={perguntaPT}\n                                    placeholder=\"Usuário.\"\n                                    fluid\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>Pergunta em Inglês</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => setperguntaEN([value].toString())}\n                                    value={perguntaEN}\n                                    placeholder=\"Usuário.\"\n                                    fluid\n                                />\n                            </Form.Field>\n\n                        </Form.Group>\n\n                        <div style={{ alignItems: 'center', justifyContent: 'center', display: foto === false ? 'flex' : 'none' }}>\n                            <Form.Group unstackable widths={2}>\n                                <Form.Field>\n                                    <label>È de Escrever ?</label>\n                                    <button onClick={() => escolher('escrever')} style={{ width: 150, backgroundColor: escrever === true ? 'green' : 'red', color: 'white' }} class=\"ui button\">{escrever === true ? 'Sim' : 'Não'}</button>\n                                </Form.Field>\n\n                                <Form.Field>\n                                    <label>È de Assinalar ?</label>\n                                    <button onClick={() => escolher('assinalar')} style={{ width: 150, backgroundColor: assinalar === true ? 'green' : 'red', color: 'white' }} class=\"ui button\">{assinalar === true ? 'Sim' : 'Não'}</button>\n                                </Form.Field>\n\n                                <Form.Field>\n                                    <label>È uma Assinatura ?</label>\n                                    <button onClick={() => escolher('assinar')} style={{ width: 150, backgroundColor: assinatura === true ? 'green' : 'red', color: 'white' }} class=\"ui button\">{assinatura === true ? 'Sim' : 'Não'}</button>\n                                </Form.Field>\n\n                            </Form.Group>\n                        </div>\n\n                        <Form.Group unstackable widths={2}>\n\n                            <Form.Field>\n                                <label>{assinalar === true ? 'Opções em Portugues' : 'Subtitulo em Portugues'}</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => settituloPT([value].toString())}\n                                    value={tituloPT}\n                                    placeholder={assinalar === true ? 'Ex: Sim, Não' : 'Qual o Documento do Motorista'}\n                                    fluid\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>{assinalar === true ? 'Opções em Inglês' : 'Subtitulo em Inglês'}</label>\n                                <Input\n                                    type=\"text\"\n                                    onChange={(e, { value }) => settituloEN([value].toString())}\n                                    value={tituloEN}\n                                    placeholder={assinalar === true ? 'Ex: Yes, No' : 'What is the Driver\"s Document?'}\n                                    fluid\n                                />\n                            </Form.Field>\n\n                        </Form.Group>\n\n                        <Button onClick={() => id !== '' ? UpdCategoria() : cadCategorias()} primary type=\"submit\" >\n                            {id !== '' ? 'Editar' : 'Salvar'}\n                        </Button>\n                        <Button onClick={() => setNovo(!novo)}>Cancelar</Button>\n                    </Form>\n                </Segment>\n                : null}\n        </>\n\n    );\n\n};","import React from 'react'\nimport { Route } from 'react-router'\nimport Layout from '.././layout/Layout'\nimport Home from '.././pages/Home'\nimport Empresas from '../pages/Empresas'\nimport Funcionarios from '../pages/Funcionarios'\nimport Categoria from '../pages/Categorias'\nimport Perguntas from '../pages/Perguntas'\n\nexport default () => (\n  <Layout>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/empresas\" component={Empresas} />\n    <Route path=\"/funcionarios\" component={Funcionarios} />\n    <Route path=\"/categoria\" component={Categoria} />\n    <Route path=\"/perguntas\" component={Perguntas} />\n  </Layout>\n);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/css/bootstrap-theme.css'\nimport './styles/index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'react-router-redux'\nimport { createBrowserHistory } from 'history'\nimport configureStore from './store/configureStore'\nimport App from './components/layout/App'\nimport registerServiceWroker from './components/common/registerServiceWorker'\n\n// Create browser history to use in the Redux store\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href')\nconst history = createBrowserHistory({ basename: baseUrl })\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nconst initialState = window.initialReduxState\nconst store = configureStore(history, initialState)\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  rootElement)\n\nregisterServiceWroker()\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\nimport * as Card from './Card';\nimport * as SideMenu from \"./SideMenu\";\nimport * as UserManagement from \"./UserManagement\";\nimport * as SearchStore from \"./SearchStore\";\n\nexport default function configureStore(history, initialState) {\n  const reducers = {\n    card: Card.reducer,\n    sideMenu: SideMenu.reducer,\n    userManagement: UserManagement.reducer,\n    searchStore: SearchStore.reducer,\n  };\n\n  const middleware = [\n    thunk,\n    routerMiddleware(history)\n  ];\n\n  // In development, use the browser's Redux dev tools extension if installed\n  const enhancers = [];\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  if (isDevelopment && typeof window !== 'undefined' && window.devToolsExtension) {\n    enhancers.push(window.devToolsExtension());\n  }\n\n  const rootReducer = combineReducers({\n    ...reducers,\n    routing: routerReducer\n  });\n\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ...enhancers)\n  );\n}\n"],"sourceRoot":""}